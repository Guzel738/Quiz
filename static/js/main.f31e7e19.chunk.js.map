{"version":3,"sources":["components/UI/Button/Button.module.css","components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Loader/Loader.module.css","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","hoc/Layout/Layout.module.css","components/UI/BackDrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","containers/QuizList/QuizList.module.scss","components/Navigation/MenuToggle/MenuToggle.js","components/UI/BackDrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","containers/QuizList/QuizList.js","store/actions/auth.js","containers/Auth/Auth.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","links","map","link","index","key","to","exact","activeClassName","active","onClose","label","this","close","isAuthenticated","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","questionNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","styles","onRetry","Loader","center","axios","create","baseURL","quizAnswerClick","answerId","dispatch","getState","answerState","activeQuestion","rightAnswerId","quizSetState","timeout","window","setTimeout","isQuizFinished","clearTimeout","fetchQuizSuccess","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","quizId","a","get","response","data","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","Select","options","option","createControl","config","validation","validate","isValid","required","trim","Auxiliary","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","formControls","isFormValid","submitHandler","event","preventDefault","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","controlName","control","forEach","name","selectChangeHandler","target","select","onSubmit","renderControls","React","item","post","QuizList","fetchQuizes","renderQuizes","authSuccess","autoLogout","time","logout","localStorage","removeItem","Auth","email","password","minLength","loginHandler","registerHandler","onChangeHandler","validateControl","is","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Logout","App","autoLogin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f31e7e19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1Zlz_\",\"error\":\"Button_error__2UtDG\",\"success\":\"Button_success__TEhQ0\",\"primary\":\"Button_primary__2NGXh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__2Dz-O\",\"close\":\"Drawer_close__v_fib\",\"active\":\"Drawer_active__9oe7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__ZAURi\",\"open\":\"MenuToggle_open__32uam\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__1DKX2\",\"QuizWrapper\":\"Quiz_QuizWrapper__2G2KN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__1Yknt\",\"Question\":\"ActiveQuiz_Question__3ryqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__1LbVe\",\"success\":\"AnswerItem_success__9LbMy\",\"error\":\"AnswerItem_error__YHv_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__6-rbu\",\"success\":\"FinishedQuiz_success__1ooiB\",\"error\":\"FinishedQuiz_error__21n-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__315-3\",\"center\":\"Loader_center__onJPV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1ebwt\",\"invalid\":\"Input_invalid__3RUqw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__za3ZH\",\"AuthForm\":\"Auth_AuthForm__34PD7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__25b1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__TwHJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__4c0NJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__4--fb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__1Ihby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__1C0XC\"};","import React from \"react\";\r\nimport classes from './MenuToggle.module.css'\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa'\r\n    ]\r\n\r\n    if (props.isOpen) {\r\n        cls.push('fa-times')\r\n        cls.push(classes.open)\r\n    } else {\r\n        cls.push('fa-bars')\r\n    }\r\n\r\n    return (\r\n        <i\r\n         className={cls.join(' ')}\r\n         onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToggle\r\n","import React from \"react\";\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}></div>\r\n\r\nexport default Backdrop\r\n","import React, {Component} from \"react\";\r\nimport classes from './Drawer.module.css'\r\nimport Backdrop from \"../../UI/BackDrop/Backdrop\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass Drawer extends Component {\r\n    renderLinks(links) {\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName={classes.active}\r\n                        onClick={this.props.onClose}\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const cls = [classes.Drawer]\r\n\r\n        if (!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n\r\n        const links = [\r\n            {to: '/', label: 'Список', exact: true}\r\n        ]\r\n\r\n        if (this.props.isAuthenticated) {\r\n            links.push({to: '/quiz-creator', label: 'Создать тест', exact: false})\r\n            links.push({to: '/logout', label: 'Выйти', exact: false})\r\n        } else {\r\n            links.push({to: '/auth', label: 'Авторизация', exact: false})\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        { this.renderLinks(links) }\r\n                    </ul>\r\n                </nav>\r\n                { this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer\r\n","import React, {Component} from 'react'\r\nimport classes from './Layout.module.css'\r\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        }\r\n        )\r\n    }\r\n\r\n    menuCloseHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n\r\n                <Drawer\r\n                    isOpen={this.state.menu}\r\n                    onClose={this.menuCloseHandler}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n\r\n                <MenuToggle\r\n                    onToggle={this.toggleMenuHandler}\r\n                    isOpen={this.state.menu}\r\n                />\r\n\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout)\r\n","import React from \"react\";\r\nimport classes from './AnswerItem.module.css'\r\n\r\nconst AnswerItem = props => {\r\n    const cls = [classes.AnswerItem]\r\n\r\n    if (props.state) {\r\n        cls.push(classes[props.state])\r\n    }\r\n\r\n    return(\r\n        <li\r\n            className={cls.join(' ')}\r\n            onClick={() => props.onAnswerClick(props.answer.id)}\r\n        >\r\n            { props.answer.text }\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem\r\n","import React from \"react\";\r\nimport classes from './AnswersList.module.css'\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\n\r\nconst AnswersList = props => {\r\n        return (\r\n        <ul className={classes.AnswersList}>\r\n            {props.answers.map((answer, index) => {\r\n                return (\r\n                    <AnswerItem\r\n                        key={index}\r\n                        answer={answer}\r\n                        onAnswerClick={props.onAnswerClick}\r\n                        state={props.state ? props.state[answer.id] : null}\r\n                    />\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default AnswersList\r\n","import React from \"react\";\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\nconst ActiveQuiz = props => {\r\n    return (\r\n        <div className={classes.ActiveQuiz}>\r\n            <p className={classes.Question}>\r\n                <span>\r\n                    <strong>{props.questionNumber}.</strong>&nbsp;\r\n                    {props.question}\r\n                </span>\r\n\r\n                <small>{props.questionNumber} of {props.quizLength}</small>\r\n            </p>\r\n\r\n            <AnswersList\r\n                answers={props.answers}\r\n                onAnswerClick={props.onAnswerClick}\r\n                state={props.state}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActiveQuiz\r\n","import React from \"react\";\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            { props.children }\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from \"react\";\r\nimport classes from './FinishedQuiz.module.css'\r\nimport styles from '../UI/Button/Button.module.css'\r\nimport Button from \"../UI/Button/Button\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst FinishedQuiz = props => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total++\r\n        }\r\n        return total\r\n    }, 0)\r\n\r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n                { props.quiz.map((quizItem, index) => {\r\n                    const cls = [\r\n                        'fa',\r\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                        classes[props.results[quizItem.id]]\r\n                    ]\r\n\r\n                    return (\r\n                        <li\r\n                         key={index}\r\n                        >\r\n                         <strong>{index + 1}</strong>.&nbsp;\r\n                          {quizItem.question}\r\n                          <i className={cls.join(' ')} />\r\n                        </li>\r\n                    )\r\n                }) }\r\n            </ul>\r\n\r\n            <p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n            <div>\r\n                <Button className={styles.Button} onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n                <Link to=\"/\">\r\n                    <Button className={styles.Button} type=\"success\">Перейти в список тестов</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuiz\r\n","import React from \"react\";\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = props => {\r\n    return (\r\n        <div className={classes.center}>\r\n            <div className={classes.Loader}>\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-27a00.firebaseio.com/'\r\n})\r\n","import axios from \"../../axios/axios-quiz\";\r\nimport {\r\n    FETCH_QUIZ_SUCCESS,\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCESS,\r\n    FINISH_QUIZ,\r\n    QUIZ_NEXT_QUESTION,\r\n    QUIZ_RETRY,\r\n    QUIZ_SET_STATE\r\n} from \"./actionTypes\";\r\n\r\nexport default function fetchQuizes() {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n        try {\r\n            const response = await axios.get('/quizes.json')\r\n\r\n            const quizes = []\r\n\r\n            Object.keys(response.data).forEach((key, index) => {\r\n                quizes.push({\r\n                    id: key,\r\n                    name: `Тест №${index + 1}`\r\n                })\r\n            })\r\n\r\n            dispatch(fetchQuizesSuccess(quizes))\r\n\r\n        } catch(e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n        try {\r\n            const response = await axios.get(`/quizes/${quizId}.json`)\r\n            const quiz = response.data\r\n\r\n            dispatch(fetchQuizSuccess(quiz))\r\n        } catch(e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n    return (dispatch, getState) => {\r\n        const state = getState().quiz\r\n\r\n        if (state.answerState) {\r\n            const key = Object.keys(state.answerState)[0]\r\n            if (state.answerState[key] === 'success') {\r\n                return\r\n            }\r\n        }\r\n\r\n        const question = state.quiz[state.activeQuestion]\r\n        const results = state.results\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            if (!results[question.id]) {\r\n                results[question.id] = 'success'\r\n            }\r\n\r\n            dispatch(quizSetState({[answerId]: 'success'}, results))\r\n\r\n            const timeout = window.setTimeout(() => {\r\n                if (isQuizFinished(state)) {\r\n                    dispatch(finishQuiz())\r\n                } else {\r\n                    dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n                }\r\n                window.clearTimeout(timeout)\r\n            }, 1000)\r\n\r\n        } else {\r\n            results[question.id] = 'error'\r\n\r\n            dispatch(quizSetState({[answerId]: 'error'}, results))\r\n        }\r\n    }\r\n}\r\n\r\nexport function retryQuiz() {\r\n    return {\r\n        type: QUIZ_RETRY\r\n    }\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n    return state.activeQuestion + 1 === state.quiz.length\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n    return {\r\n        type: FETCH_QUIZ_SUCCESS,\r\n        quiz\r\n    }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n    return {\r\n        type: FETCH_QUIZES_START\r\n    }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n    return {\r\n        type: FETCH_QUIZES_SUCCESS,\r\n        quizes\r\n    }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        error: e\r\n    }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n    return {\r\n        type: QUIZ_SET_STATE,\r\n        answerState,\r\n        results\r\n    }\r\n}\r\n\r\nexport function finishQuiz() {\r\n    return {\r\n        type: FINISH_QUIZ\r\n    }\r\n}\r\n\r\nexport function quizNextQuestion(activeQuestion) {\r\n    return {\r\n        type: QUIZ_NEXT_QUESTION,\r\n        activeQuestion\r\n    }\r\n}\r\n","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport {connect} from 'react-redux';\r\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from \"../../store/actions/quiz\";\r\n\r\nclass Quiz extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizById(this.props.match.params.id)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.retryQuiz()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Check your skills</h1>\r\n                    {\r\n                        this.props.loading || !this.props.quiz\r\n                        ? <Loader />\r\n                        : this.props.isFinished\r\n                            ? <FinishedQuiz\r\n                                results={this.props.results}\r\n                                quiz={this.props.quiz}\r\n                                onRetry={this.props.retryQuiz}\r\n                              />\r\n                            : <ActiveQuiz\r\n                                answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                                question={this.props.quiz[this.props.activeQuestion].question}\r\n                                onAnswerClick={this.props.quizAnswerClick}\r\n                                quizLength={this.props.quiz.length}\r\n                                questionNumber={this.props.activeQuestion + 1}\r\n                                state={this.props.answerState}\r\n                              />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        results: state.quiz.results,\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        quiz: state.quiz.quiz,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz: () => dispatch(retryQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)\r\n","import React from \"react\";\r\nimport classes from './Input.module.css'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && touched && shouldValidate\r\n}\r\n\r\nconst Input = props => {\r\n    const inputType = props.type || 'text'\r\n    const cls = [classes.Input]\r\n    const htmlFor = `${inputType}-${Math.random()}`\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push(classes.invalid)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input\r\n                type={inputType}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n\r\n            {\r\n                isInvalid(props)\r\n                ? <span>{props.errorMessage || 'Введите верное значение'}</span>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from \"react\";\r\nimport classes from './Select.module.css'\r\n\r\nconst Select = props => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label htmlFor=\"htmlFor\">{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n                { props.options.map((option, index) => {\r\n                    return (\r\n                        <option\r\n                            value={option.value}\r\n                            key={option.value + index}\r\n                        >\r\n                            {option.text}\r\n                        </option>\r\n                    )\r\n                }) }\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select\r\n","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if (!validation) {\r\n        return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if (validation.required) {\r\n        isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    return isValid\r\n}\r\n","const Auxiliary = props => props.children\r\n\r\nexport default Auxiliary\r\n","import React from \"react\";\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Select from \"../../components/UI/Select/Select\";\r\nimport {createControl, validate} from \"../../form/formFramework\";\r\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport {connect} from \"react-redux\";\r\nimport {createQuizQuestion, finishCreateQuiz} from \"../../store/actions/create\";\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({\r\n        label: `Вариант ${number}`,\r\n        errorMessage: 'Значение не может быть пустым',\r\n        id: number\r\n    }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n    return {\r\n        question: createControl({\r\n            label: 'Введите вопрос',\r\n            errorMessage: 'Вопрос не может быть пустым'\r\n        }, {required: true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4)\r\n    }\r\n}\r\n\r\nclass QuizCreator extends React.Component {\r\n\r\n    state = {\r\n        formControls: createFormControls(),\r\n        rightAnswerId: 1,\r\n        isFormValid: false\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    addQuestionHandler = event => {\r\n        event.preventDefault()\r\n\r\n        const {question, option1, option2, option3, option4} = this.state.formControls\r\n\r\n        const questionItem = {\r\n            question: question.value,\r\n            id: this.props.quiz.length + 1,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id}\r\n            ]\r\n        }\r\n\r\n        this.props.createQuizQuestion(questionItem)\r\n\r\n        this.setState({\r\n            formControls: createFormControls(),\r\n            rightAnswerId: 1,\r\n            isFormValid: false\r\n        })\r\n    }\r\n\r\n    createQuizHandler = event => {\r\n        event.preventDefault()\r\n\r\n        this.setState({\r\n            formControls: createFormControls(),\r\n            rightAnswerId: 1,\r\n            isFormValid: false\r\n        })\r\n        this.props.finishCreateQuiz()\r\n    }\r\n\r\n    changeHandler = (value, controlName) => {\r\n        const formControls = {...this.state.formControls}\r\n        const control = {...formControls[controlName]}\r\n\r\n        control.value = value\r\n        control.touched = true\r\n        control.valid = validate(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n\r\n        let isFormValid = true\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n\r\n        this.setState({\r\n            formControls, isFormValid\r\n        })\r\n    }\r\n\r\n    renderControls() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n            return (\r\n                <Auxiliary key={controlName + index}>\r\n                    <Input\r\n                        value={control.value}\r\n                        label={control.label}\r\n                        valid={control.valid}\r\n                        touched={control.touched}\r\n                        errorMessage={control.errorMessage}\r\n                        shouldValidate={!!control.validation}\r\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\r\n                    />\r\n\r\n                    { index === 0 ? <hr/> : null }\r\n                </Auxiliary>\r\n            )\r\n        })\r\n    }\r\n\r\n    selectChangeHandler = event => {\r\n        this.setState({\r\n            rightAnswerId: +event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const select = <Select\r\n            label=\"Выберите правильный ответ\"\r\n            value={this.state.rightAnswerId}\r\n            onChange={this.selectChangeHandler}\r\n            options={[\r\n                {text: 1, value: 1},\r\n                {text: 2, value: 2},\r\n                {text: 3, value: 3},\r\n                {text: 4, value: 4}\r\n            ]}\r\n        />\r\n\r\n        return (\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n\r\n                    <form onSubmit={this.submitHandler}>\r\n\r\n                        { this.renderControls() }\r\n\r\n                        { select }\r\n\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.addQuestionHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Добавить вопрос\r\n                        </Button>\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.createQuizHandler}\r\n                            disabled={this.props.quiz.length === 0}\r\n                        >\r\n                            Создать тест\r\n                        </Button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quiz: state.create.quiz\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)\r\n","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"./actionTypes\";\r\nimport axios from \"../../axios/axios-quiz\";\r\n\r\nexport function createQuizQuestion(item) {\r\n    return {\r\n        type: CREATE_QUIZ_QUESTION,\r\n        item\r\n    }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n    return {\r\n        type: RESET_QUIZ_CREATION\r\n    }\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n    return async (dispatch, getState) => {\r\n        await axios.post('/quizes.json', getState().create.quiz)\r\n        dispatch(resetQuizCreation())\r\n    }\r\n}","import React from \"react\";\r\nimport classes from './QuizList.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport fetchQuizes from '../../store/actions/quiz'\r\n\r\nclass QuizList extends React.Component {\r\n\r\n    renderQuizes() {\r\n        return this.props.quizes.map(quiz => {\r\n            return (\r\n                <li\r\n                 key={quiz.id}\r\n                >\r\n                    <NavLink\r\n                     to={'/quiz/' + quiz.id}\r\n                    >\r\n                        {quiz.name}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizes()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Список тестов</h1>\r\n\r\n                    {\r\n                        this.props.loading && this.props.quizes.length !== 0\r\n                         ? <Loader />\r\n                         : <ul>\r\n                            { this.renderQuizes() }\r\n                           </ul>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)\r\n","import axios from \"axios\";\r\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from \"./actionTypes\";\r\n\r\nexport function auth(email, password, isLogin) {\r\n    return async dispatch => {\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB7kiHWE6i_mYvfEyrHHbADcVTgehs7ULM'\r\n\r\n        if (isLogin) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB7kiHWE6i_mYvfEyrHHbADcVTgehs7ULM'\r\n        }\r\n\r\n        const response = await axios.post(url, authData)\r\n        const data = response.data\r\n\r\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n        localStorage.setItem('token', data.idToken)\r\n        localStorage.setItem('userId', data.localId)\r\n        localStorage.setItem('expirationDate', expirationDate)\r\n\r\n        dispatch(authSuccess(data.idToken))\r\n        dispatch(autoLogout(data.expiresIn))\r\n    }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token\r\n    }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, time * 1000)\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expirationDate')\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport function autoLogin() {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if (!token) {\r\n            dispatch(logout())\r\n        } else {\r\n            const expirationDate =  new Date(localStorage.getItem('expirationDate'))\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout())\r\n            } else {\r\n                dispatch(authSuccess(token))\r\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n            }\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport is from 'is_js'\r\nimport {connect} from \"react-redux\";\r\nimport {auth} from \"../../store/actions/auth\";\r\n\r\nclass Auth extends React.Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Введите корректный email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Password',\r\n                errorMessage: 'Введите корректный пароль',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            true\r\n        )\r\n    }\r\n\r\n    registerHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            false\r\n        )\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    validateControl(value, validation) {\r\n        if (!validation) {\r\n            return true\r\n        }\r\n\r\n        let isValid = true\r\n\r\n        if (validation.required) {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n\r\n        if (validation.email) {\r\n            isValid = is.email(value) && isValid\r\n        }\r\n\r\n        if (validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n        const formControls = {...this.state.formControls}\r\n        const control = {...formControls[controlName]}\r\n\r\n        control.value = event.target.value\r\n        control.touched = true\r\n        control.valid = this.validateControl(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n\r\n        let isFormValid = true\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n\r\n        this.setState({\r\n            formControls, isFormValid\r\n        })\r\n    }\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n            return (\r\n                <Input\r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    label={control.label}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    errorMessage={control.errorMessage}\r\n                    shouldValidate={!!control.validation}\r\n                    onChange={event => this.onChangeHandler(event, controlName)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n\r\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\r\n                        { this.renderInputs() }\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.registerHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)","import React, {Component} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../store/actions/auth\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.logout()\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to={'/'}    />\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React, {Component} from 'react';\nimport Layout from \"./hoc/Layout/Layout\";\nimport Quiz from \"./containers/Quiz/Quiz\";\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport QuizList from \"./containers/QuizList/QuizList\";\nimport Auth from \"./containers/Auth/Auth\";\nimport {connect} from \"react-redux\";\nimport Logout from \"./components/Logout/Logout\";\nimport {autoLogin} from \"./store/actions/auth\";\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.autoLogin()\n    }\n\n    render() {\n        let routes = (\n            <Switch>\n                <Route path=\"/auth\" component={Auth} />\n                <Route path=\"/quiz/:id\" component={Quiz} />\n                <Route path=\"/\" exact component={QuizList} />\n                <Redirect to=\"/\" />\n            </Switch>\n        )\n\n        if (this.props.isAuthenticated) {\n            routes = (\n                <Switch>\n                    <Route path=\"/quiz-creator\" component={QuizCreator} />\n                    <Route path=\"/quiz/:id\" component={Quiz} />\n                    <Route path=\"/logout\" component={Logout} />\n                    <Route path=\"/\" exact component={QuizList} />\n                    <Redirect to=\"/\" />\n                </Switch>\n            )\n        }\n\n        return (\n            <Layout>\n                { routes }\n            </Layout>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isAuthenticated: !!state.auth.token\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        autoLogin: () => dispatch(autoLogin())\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    FETCH_QUIZ_SUCCESS,\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCESS,\r\n    FINISH_QUIZ,\r\n    QUIZ_NEXT_QUESTION, QUIZ_RETRY,\r\n    QUIZ_SET_STATE\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    quiz: null\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state, loading: true\r\n            }\r\n        case FETCH_QUIZES_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quizes: action.quizes\r\n            }\r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state, loading: false, error: action.error\r\n            }\r\n        case FETCH_QUIZ_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quiz: action.quiz\r\n            }\r\n        case QUIZ_SET_STATE:\r\n            return {\r\n                ...state, answerState: action.answerState, results: action.results\r\n            }\r\n        case FINISH_QUIZ:\r\n            return {\r\n                ...state, isFinished: true\r\n            }\r\n        case QUIZ_NEXT_QUESTION:\r\n            return {\r\n                ...state, answerState: null, activeQuestion: action.activeQuestion\r\n            }\r\n        case QUIZ_RETRY:\r\n            return {\r\n                ...state,\r\n                results: {},\r\n                isFinished: false,\r\n                activeQuestion: 0,\r\n                answerState: null,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    quiz: []\r\n}\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATE_QUIZ_QUESTION:\r\n            return {\r\n                ...state,\r\n                quiz: [...state.quiz, action.item]\r\n            }\r\n        case RESET_QUIZ_CREATION:\r\n            return {\r\n                ...state,\r\n                quiz: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport quizReducer from \"./quiz\";\r\nimport createReducer from \"./create\";\r\nimport authReducer from \"./auth\";\r\n\r\nexport default combineReducers({\r\n    quiz: quizReducer,\r\n    create: createReducer,\r\n    auth: authReducer\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        }) : compose;\n\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}